name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test application
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Клонировать репозиторий
      - name: Checkout repository
        uses: actions/checkout@v3

      # Шаг 2: Установить Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.3

      # Шаг 3: Установить зависимости
      - name: Install dependencies
        run: go mod tidy

      # Шаг 4: Запустить тесты
      - name: Run tests
        run: go test -v ./...

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
      # Шаг 1: Клонировать репозиторий
      - name: Checkout repository
        uses: actions/checkout@v3

      # Шаг 2: Сборка Docker-образа
      - name: Build Docker Image
        run: docker build -f ./Dockerfile -t bankapp:latest .

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      # Шаг 1: Клонировать репозиторий
      - name: Checkout repository
        uses: actions/checkout@v3

      # Шаг 2: Загрузить Docker-образ
      - name: Push Docker Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker tag bankapp:latest $DOCKER_USERNAME/bankapp:latest
          docker push $DOCKER_USERNAME/bankapp:latest

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [deploy]

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      # Шаг 1: Клонировать репозиторий
      - name: Checkout repository
        uses: actions/checkout@v3

      # Шаг 2: Установка Docker Compose
      - name: Install Docker Compose
        run: sudo apt-get update && sudo apt-get install docker-compose -y

      # Шаг 3: Запуск интеграционных тестов
      - name: Run integration tests
        run: docker-compose -f docker-compose.yml up --abort-on-container-exit --exit-code-from app
